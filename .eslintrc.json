{
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "import"
  ],
  "rules": {
    // Performance e Qualidade
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/prefer-const": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    
    // Arquitetura - ForÃ§ar uso de serviÃ§os
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["**/supabase/client"],
            "message": "ðŸš« Acesso direto ao Supabase proibido! Use um serviÃ§o em /services/ como boundary Ãºnico."
          },
          {
            "group": ["@/integrations/supabase/client"],
            "message": "ðŸš« Acesso direto ao Supabase proibido! Use um serviÃ§o em /services/ como boundary Ãºnico."
          },
          {
            "group": ["@/lib/supabase/client"],
            "message": "ðŸš« Acesso direto ao Supabase proibido! Use um serviÃ§o em /services/ como boundary Ãºnico."
          }
        ],
        "paths": [
          {
            "name": "@/integrations/supabase/client",
            "importNames": ["supabase"],
            "message": "ðŸš« Import direto do supabase client proibido fora de /services/! Use useSecureServiceBoundary()."
          }
        ]
      }
    ],
    
    // React especÃ­fico
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    
    // Performance
    "import/no-default-export": "off",
    "prefer-const": "error",
    "no-var": "error",
    
    // SeguranÃ§a
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    
    // Code Quality
    "complexity": ["warn", 10],
    "max-depth": ["warn", 4],
    "max-lines-per-function": ["warn", 100],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    
    // Promises
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-await": "warn"
  },
  "overrides": [
    {
      "files": ["src/services/**/*"],
      "rules": {
        "no-restricted-imports": "off"
      }
    },
    {
      "files": ["src/hooks/useSecureServiceBoundary.tsx"],
      "rules": {
        "no-restricted-imports": "off"
      }
    },
    {
      "files": ["supabase/functions/**/*"],
      "rules": {
        "no-restricted-imports": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  }
}